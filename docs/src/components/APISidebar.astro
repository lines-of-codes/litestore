---
import { getCollection } from "astro:content";
import Badge from "./Badge.astro";

let currentUrl = Astro.url.pathname.substring(20);

if (currentUrl.endsWith("/")) {
	currentUrl = currentUrl.substring(0, currentUrl.length - 1);
}

const apiDocs = await getCollection("apiDocs");

const routeList = apiDocs
	.map((doc) => ({
		id: doc.id === "index" ? "" : doc.id,
		method: doc.data.method,
		title: doc.data.title,
		summary: doc.data.summary,
	}))
	.sort((a, b) => a.id.toLowerCase().localeCompare(b.id.toLowerCase()));
---

<script define:vars={{ currentUrl, routeList }}>
	document.addEventListener("alpine:init", () => {
		Alpine.data("routeInfo", () => ({
			routes: routeList,
			currentUrl,
		}));
	});
</script>

<nav x-show="showApiRoutes">
	<header>
		<a href="/litestore/docs/" class="cleanlink"
			>&larr; Back to documentation</a
		>
		<a href="/litestore/" class="cleanlink"><h1>litestore</h1></a>
	</header>
	<ul id="routeList">
		{
			routeList.map((data) => (
				<li>
					<a
						class:list={[
							"cleanlink",
							{ active: currentUrl === data.id },
						]}
						href={`/litestore/docs/api/${data.id}`}
					>
						{data.method === undefined ? null : (
							<Badge
								variant={(data.method as string).toLowerCase()}
							>
								{data.method}
							</Badge>
						)}
						<span>{data.title}</span>
					</a>
				</li>
			))
		}
	</ul>
</nav>

<style>
	#routeList {
		padding-top: 8px;
		padding-left: 0;
		margin: 0;
		list-style-type: none;
	}

	#routeList li a {
		margin: 4px 0;
		padding: 6px 16px;
		display: block;
		transition: 200ms;
		border-radius: 5px;
		color: #e0e0e0;
	}

	#routeList li a:hover {
		background: rgba(0, 0, 0, 0.25);
		color: #ffffff;
	}

	a.active {
		background: rgba(0, 0, 0, 0.2);
	}

	@media screen and (max-width: 700px) {
		nav :global(.badge) {
			display: none;
		}
	}
</style>
